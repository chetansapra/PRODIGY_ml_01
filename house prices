import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

np.random.seed(0)
num_samples = 100
square_footage = np.random.uniform(1000, 4000, num_samples)
bedrooms = np.random.randint(1, 6, num_samples)
bathrooms = np.random.uniform(1, 4, num_samples)
house_prices = 100 * square_footage + 20000 * bedrooms + 15000 * bathrooms + np.random.normal(0, 10000, num_samples)

data = pd.DataFrame({'SquareFootage': square_footage, 'Bedrooms': bedrooms, 'Bathrooms': bathrooms, 'Price': house_prices})

print(data.head())

plt.scatter(data['SquareFootage'], data['Price'])
plt.xlabel('Square Footage')
plt.ylabel('Price')
plt.title('Square Footage vs. Price')
plt.show()


#linear regression model to implement house prices


from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Define features (square footage, bedrooms, bathrooms) and target variable (price)
X = data[['SquareFootage', 'Bedrooms', 'Bathrooms']]
y = data['Price']


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = LinearRegression()


model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared Score: {r2}")

coefficients = model.coef_
intercept = model.intercept_

print(f"Coefficients: {coefficients}")
print(f"Intercept: {intercept}")
